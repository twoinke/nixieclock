---
name: Build Nixie Sketch
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v2.0.0
      
      - name: Install platform
        run: |
          arduino-cli core update-index
          arduino-cli core install esp8266:esp8266 --additional-urls https://arduino.esp8266.com/stable/package_esp8266com_index.json 

      - name: Install Libraries
        run: |
          arduino-cli lib install NTPClient@3.2.1 Time@1.6.1 Timezone@1.2.4 ESPEssentials@2.1.4 ElegantOTA@3.1.3 ESP8266TimerInterrupt@1.6.0
          
      - name: Compile Sketch
        run: arduino-cli compile -e --fqbn esp8266:esp8266:d1_mini_clone --warnings all ./src/Nixie

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Nixie Binary
          path: src/Nixie/build/esp8266.esp8266.d1_mini_clone/Nixie.ino.bin



      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: src/Nixie/build/esp8266.esp8266.d1_mini_clone/Nixie.ino.bin
          asset_name: Nixie.ino.${{ github.ref }}.bin
          asset_content_type: application/octet-stream
